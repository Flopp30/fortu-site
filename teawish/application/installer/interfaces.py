from io import BytesIO
from pathlib import Path
from typing import Protocol

from teawish.application.installer.models import Installer


class IInstallerFileStorage(Protocol):
    def save(self, content: BytesIO, file_name: str) -> Path: ...
    def load(self, file_path: str) -> BytesIO: ...


class IInstallerRepository(Protocol):
    async def get(self, launcher_id: int) -> Installer: ...
    async def get_current(self) -> Installer: ...
    async def create(self, installer: Installer) -> Installer: ...
    async def get_list(self, limit: int | None = None, offset: int | None = None) -> list[Installer]: ...
    async def total_count(self) -> int: ...
