from io import BytesIO
from pathlib import Path
from typing import Protocol

from teawish.application.launcher.models import Launcher


class ILauncherFileStorage(Protocol):
    def save(self, content: BytesIO, file_name: str) -> Path: ...
    def load(self, file_path: str) -> BytesIO: ...


class ILauncherRepository(Protocol):
    async def get(self, launcher_id: int) -> Launcher: ...
    async def get_current(self) -> Launcher: ...
    async def create(self, launcher: Launcher) -> Launcher: ...
    async def get_list(self, limit: int | None = None, offset: int | None = None) -> list[Launcher]: ...
    async def total_count(self) -> int: ...
